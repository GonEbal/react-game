{"ast":null,"code":"import _classCallCheck from\"/Users/denis/Documents/UDACITY/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/denis/Documents/UDACITY/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/denis/Documents/UDACITY/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/denis/Documents/UDACITY/react-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{Component}from\"react\";import{connect}from\"react-redux\";import Question from\"./Question\";var Dashboard=/*#__PURE__*/function(_Component){_inherits(Dashboard,_Component);var _super=_createSuper(Dashboard);function Dashboard(props){var _this;_classCallCheck(this,Dashboard);_this=_super.call(this,props);_this.state={show_answered:false};_this.unanswered=function(){_this.box1.current.classList.remove(\"shadow\");_this.box2.current.classList.add(\"shadow\");var action={show_answered:false};_this.change(action);};_this.answered=function(){_this.box1.current.classList.add(\"shadow\");_this.box2.current.classList.remove(\"shadow\");var action={show_answered:true};_this.change(action);};_this.change=function(action){if(_this.state.show_answered!==action.show_answered){_this.setState({show_answered:!_this.state.show_answered});}};_this.box1=/*#__PURE__*/React.createRef();_this.box2=/*#__PURE__*/React.createRef();return _this;}_createClass(Dashboard,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"container_body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"button_container\",children:[/*#__PURE__*/_jsx(\"button\",{ref:this.box2,className:\"box shadow\",onClick:this.unanswered,children:\"Unanswered Questions\"}),/*#__PURE__*/_jsx(\"button\",{ref:this.box1,className:\"box\",onClick:this.answered,children:\"Answered Questions\"})]}),/*#__PURE__*/_jsx(\"div\",{style:{display:this.state.show_answered?\"block\":\"none\"},children:this.props.answered_q.map(function(id){return/*#__PURE__*/_jsx(\"li\",{className:\"question\",children:/*#__PURE__*/_jsx(Question,{id:id,answered:true})},id);})}),/*#__PURE__*/_jsx(\"div\",{style:{display:!this.state.show_answered?\"block\":\"none\"},children:this.props.unanswered_q.map(function(id){return/*#__PURE__*/_jsx(\"li\",{className:\"question\",children:/*#__PURE__*/_jsx(Question,{id:id,answered:false})},id);})})]});}}]);return Dashboard;}(Component);function mapStateToProps(_ref){var questions=_ref.questions,authedUser=_ref.authedUser,users=_ref.users;var sorted_bytime_qs=Object.keys(questions).sort(function(a,b){return questions[b].timestamp-questions[a].timestamp;});var unanswered_q=sorted_bytime_qs.filter(function(valueName){return!questions[valueName].optionOne.votes.includes(authedUser)&&!questions[valueName].optionTwo.votes.includes(authedUser);});var answered_q=sorted_bytime_qs.filter(function(valueName){return questions[valueName].optionOne.votes.includes(authedUser)||questions[valueName].optionTwo.votes.includes(authedUser);});return{unanswered_q:unanswered_q,answered_q:answered_q};}export default connect(mapStateToProps)(Dashboard);","map":{"version":3,"sources":["/Users/denis/Documents/UDACITY/react-game/src/components/Dashboard.js"],"names":["React","Component","connect","Question","Dashboard","props","state","show_answered","unanswered","box1","current","classList","remove","box2","add","action","change","answered","setState","createRef","display","answered_q","map","id","unanswered_q","mapStateToProps","questions","authedUser","users","sorted_bytime_qs","Object","keys","sort","a","b","timestamp","filter","valueName","optionOne","votes","includes","optionTwo"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport Question from \"./Question\"\n\nclass Dashboard extends Component {\n  state = {\n    show_answered: false,\n  }\n\n  constructor(props) {\n    super(props);\n    this.box1 = React.createRef();\n    this.box2 = React.createRef();\n  }\n\n  unanswered = () => {\n    this.box1.current.classList.remove(\"shadow\")\n    this.box2.current.classList.add(\"shadow\")\n    const action = { show_answered: false }\n    this.change(action)\n  }\n  answered = () => {\n    this.box1.current.classList.add(\"shadow\")\n    this.box2.current.classList.remove(\"shadow\")\n    const action = { show_answered: true }\n    this.change(action)\n  }\n\n  change = (action) => {\n    if (this.state.show_answered !== action.show_answered) {\n      this.setState({ show_answered: !this.state.show_answered })\n    }\n  }\n  render() {\n    return (\n      <div className=\"container_body\">\n        <div className=\"button_container\">\n          <button ref={this.box2} className=\"box shadow\" onClick={this.unanswered}>\n            Unanswered Questions\n          </button>\n          <button ref={this.box1} className=\"box\" onClick={this.answered}>\n            Answered Questions\n          </button>\n        </div>\n        <div style={{ display: this.state.show_answered ? \"block\" : \"none\" }}>\n          {this.props.answered_q.map((id) => (\n            <li key={id} className=\"question\">\n              <Question id={id} answered={true}/>\n            </li>\n          ))}\n        </div>\n        <div style={{ display: !this.state.show_answered ? \"block\" : \"none\" }}>\n          {this.props.unanswered_q.map((id) => (\n            <li key={id} className=\"question\">\n              <Question id={id} answered={false} />\n            </li>\n          ))}\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps({ questions, authedUser, users }) {\n  const sorted_bytime_qs = Object.keys(questions).sort(\n    (a, b) => questions[b].timestamp - questions[a].timestamp\n  )\n\n  const unanswered_q = sorted_bytime_qs.filter(\n    (valueName) =>\n      !questions[valueName].optionOne.votes.includes(authedUser) &&\n      !questions[valueName].optionTwo.votes.includes(authedUser)\n  )\n\n  const answered_q = sorted_bytime_qs.filter(\n    (valueName) =>\n      questions[valueName].optionOne.votes.includes(authedUser) ||\n      questions[valueName].optionTwo.votes.includes(authedUser)\n  )\n  return {\n    unanswered_q,\n    answered_q,\n  }\n}\n\nexport default connect(mapStateToProps)(Dashboard)\n"]},"metadata":{},"sourceType":"module"}