{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/denis/Documents/UDACITY/react-game/src/components/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Question from \"./Question\";\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      show_answered: true\n    };\n\n    this.unanswered = () => {\n      const box2 = document.getElementById(\"box2\");\n      const box1 = document.getElementById(\"box1\");\n      box1.classList.remove(\"shadow\");\n      box2.classList.add(\"shadow\");\n      this.change();\n    };\n\n    this.answered = () => {\n      const box1 = document.getElementById(\"box1\");\n      const box2 = document.getElementById(\"box2\");\n      box1.classList.add(\"shadow\");\n      box2.classList.remove(\"shadow\");\n      this.change();\n    };\n\n    this.change = () => {\n      this.setState({\n        show_answered: !this.state.show_answered\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container_body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"box1\",\n          className: \"box shadow\",\n          onClick: this.answered,\n          children: \"Answered Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"box2\",\n          className: \"box\",\n          onClick: this.unanswered,\n          children: \"Unanswered Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"check\",\n        style: {\n          display: this.state.show_answered ? 'block' : 'none'\n        },\n        children: this.props.answered_q.map(id => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"question\",\n          children: /*#__PURE__*/_jsxDEV(Question, {\n            id: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: !this.state.show_answered ? 'block' : 'none'\n        },\n        children: this.props.unanswered_q.map(id => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"question\",\n          children: /*#__PURE__*/_jsxDEV(Question, {\n            id: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  questions,\n  authedUser,\n  users\n}) {\n  const answered_questions = Object.values(questions).filter(valueName => valueName.optionOne.votes.includes(authedUser) || valueName.optionTwo.votes.includes(authedUser));\n  const unanswered_questions = Object.values(questions).filter(valueName => !valueName.optionOne.votes.includes(authedUser) && !valueName.optionTwo.votes.includes(authedUser));\n  return {\n    unanswered_q: Object.values(unanswered_questions).map(item => item.id),\n    answered_q: Object.values(answered_questions).map(item => item.id)\n  };\n}\n\nexport default connect(mapStateToProps)(Dashboard);","map":{"version":3,"sources":["/Users/denis/Documents/UDACITY/react-game/src/components/Dashboard.js"],"names":["React","Component","connect","Question","Dashboard","state","show_answered","unanswered","box2","document","getElementById","box1","classList","remove","add","change","answered","setState","render","display","props","answered_q","map","id","unanswered_q","mapStateToProps","questions","authedUser","users","answered_questions","Object","values","filter","valueName","optionOne","votes","includes","optionTwo","unanswered_questions","item"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport Question from \"./Question\"\n\nclass Dashboard extends Component {\n  state ={\n    show_answered: true,\n  }\n\n  unanswered = () => {\n    const box2 = document.getElementById(\"box2\")\n    const box1 = document.getElementById(\"box1\")\n    box1.classList.remove(\"shadow\")\n    box2.classList.add(\"shadow\")\n    this.change()\n  }\n  answered = () => {\n    const box1 = document.getElementById(\"box1\")\n    const box2 = document.getElementById(\"box2\")\n    box1.classList.add(\"shadow\")\n    box2.classList.remove(\"shadow\")\n    this.change()\n  }\n\n  change = () => {\n    this.setState({ show_answered: !this.state.show_answered })\n  }\n\n  render() {\n    return (\n      <div className=\"container_body\">\n        <div className='button_container'>\n          <div\n            id='box1' \n            className='box shadow'\n            onClick={this.answered}\n            >\n            Answered Questions\n          </div>\n          <div \n            id='box2'\n            className='box'\n            onClick={this.unanswered}\n            >\n            Unanswered Questions\n          </div>\n        </div>\n          <div className='check' style={{display: this.state.show_answered ? 'block' : 'none' }}>\n            {this.props.answered_q.map((id) => (\n              <li key={id} className=\"question\">\n                <Question id={id} />\n              </li>\n            ))}\n          </div>\n           <div style={{display: !this.state.show_answered ? 'block' : 'none' }}>\n            {this.props.unanswered_q.map((id) => (\n              <li key={id} className=\"question\">\n                <Question id={id} />\n              </li>\n            ))}\n          </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps({ questions, authedUser, users }) {\n  const answered_questions = Object.values(questions).filter(\n    (valueName) =>\n      valueName.optionOne.votes.includes(authedUser) ||\n      valueName.optionTwo.votes.includes(authedUser)\n  )\n\n  const unanswered_questions = Object.values(questions).filter(\n    (valueName) =>\n      !valueName.optionOne.votes.includes(authedUser) &&\n      !valueName.optionTwo.votes.includes(authedUser)\n  )\n  return {\n    unanswered_q: Object.values(unanswered_questions).map((item) => item.id),\n    answered_q: Object.values(answered_questions).map((item) => item.id),\n  }\n}\n\nexport default connect(mapStateToProps)(Dashboard)\n"]},"metadata":{},"sourceType":"module"}