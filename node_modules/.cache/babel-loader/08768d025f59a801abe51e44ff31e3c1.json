{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/denis/Documents/UDACITY/react-game/src/components/Question.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nclass Question extends Component {\n  render() {\n    const {\n      answer,\n      answered\n    } = this.props;\n    const {\n      avatarURL,\n      name\n    } = this.props.author;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user_asks\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [name, \" asks:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatarURL,\n          alt: `Avatar of ${name}`,\n          className: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-info\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Would you rather\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"...\", answer, \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 8\n            }, this), answered === false ? /*#__PURE__*/_jsxDEV(Link, {\n              to: {\n                pathname: `/questions/${this.props.id}`,\n                state: {\n                  answered: false\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"view_poll_btn\",\n                children: \"View Poll\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 9\n            }, this) : /*#__PURE__*/_jsxDEV(Link, {\n              to: {\n                pathname: `/questions/${this.props.id}`,\n                state: {\n                  answered: true\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"view_poll_btn\",\n                children: \"View Poll\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  questions,\n  users,\n  authedUser\n}, {\n  id\n}) {\n  const question = questions[id];\n  const author = users[question.author];\n  const loggedUser = users[authedUser];\n  const answer = loggedUser.answers[id];\n  return {\n    question: question,\n    author: author,\n    loggedUser: loggedUser,\n    answer: answer ? question[answer].text : `${question[\"optionOne\"].text}...or...${question[\"optionTwo\"].text}`\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(Question));","map":{"version":3,"sources":["/Users/denis/Documents/UDACITY/react-game/src/components/Question.js"],"names":["React","Component","Fragment","connect","Link","withRouter","Question","render","answer","answered","props","avatarURL","name","author","pathname","id","state","mapStateToProps","questions","users","authedUser","question","loggedUser","answers","text"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Link, withRouter } from \"react-router-dom\"\n\nclass Question extends Component {\n\trender() {\n\t\tconst { answer, answered } = this.props\n\t\tconst { avatarURL, name } = this.props.author\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className=\"user_asks\">\n\t\t\t\t\t<span>{name} asks:</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"question-inner\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={avatarURL}\n\t\t\t\t\t\talt={`Avatar of ${name}`}\n\t\t\t\t\t\tclassName=\"avatar\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"question-info\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span>Would you rather</span>\n\t\t\t\t\t\t\t<p>...{answer}...</p>\n\t\t\t\t\t\t\t{answered === false ? (\n\t\t\t\t\t\t\t\t<Link to={{pathname: `/questions/${this.props.id}`, state: {answered: false}}}>\n\t\t\t\t\t\t\t\t\t<button className=\"view_poll_btn\">\n\t\t\t\t\t\t\t\t\t\tView Poll\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Link to={{pathname: `/questions/${this.props.id}`, state: {answered: true}}}>\n\t\t\t\t\t\t\t\t\t<button className=\"view_poll_btn\">\n\t\t\t\t\t\t\t\t\t\tView Poll\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\n\nfunction mapStateToProps({ questions, users, authedUser }, { id }) {\n\tconst question = questions[id]\n\tconst author = users[question.author]\n\tconst loggedUser = users[authedUser]\n\tconst answer = loggedUser.answers[id]\n\treturn {\n\t\tquestion: question,\n\t\tauthor: author,\n\t\tloggedUser: loggedUser,\n\t\tanswer: answer\n\t\t\t? question[answer].text\n\t\t\t: `${question[\"optionOne\"].text}...or...${question[\"optionTwo\"].text}`,\n\t}\n}\n\nexport default withRouter(connect(mapStateToProps)(Question))\n"]},"metadata":{},"sourceType":"module"}