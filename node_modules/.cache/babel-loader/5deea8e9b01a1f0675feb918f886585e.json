{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/denis/Documents/UDACITY/react-game/src/components/Question.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Question extends Component {\n  render() {\n    const {\n      avatarURL,\n      name\n    } = this.props.user;\n    const {\n      answer\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user_asks\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [name, \" asks:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatarURL,\n          alt: `Avatar of ${name}`,\n          className: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-info\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Would you rather\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"...\", answer, \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  questions,\n  users,\n  authedUser\n}, {\n  id\n}) {\n  const question = questions[id];\n  const author = users[question.author];\n  const loggedUser = users[authedUser];\n  const answer = loggedUser.answers[id];\n  console.log('Avatar', answer);\n  return {\n    question: question,\n    user: loggedUser,\n    answer: answer ? question[answer].text : `${question['optionOne'].text}..or..${question['optionTwo'].text}`\n  };\n}\n\nexport default connect(mapStateToProps)(Question);","map":{"version":3,"sources":["/Users/denis/Documents/UDACITY/react-game/src/components/Question.js"],"names":["React","Component","Fragment","connect","Question","render","avatarURL","name","props","user","answer","mapStateToProps","questions","users","authedUser","id","question","author","loggedUser","answers","console","log","text"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAChCI,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAsB,KAAKC,KAAL,CAAWC,IAAvC;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAa,KAAKF,KAAxB;AACA,wBACC,QAAC,QAAD;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACC;AAAA,qBAAOD,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD,eAIC;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACC;AACC,UAAA,GAAG,EAAED,SADN;AAEC,UAAA,GAAG,EAAG,aAAYC,IAAK,EAFxB;AAGC,UAAA,SAAS,EAAC;AAHX;AAAA;AAAA;AAAA;AAAA,gBADD,eAMC;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACC;AAAA,oCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,eAEC;AAAA,gCAAOG,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAND;AAAA;AAAA;AAAA;AAAA;AAAA,cAJD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAoBA;;AAxB+B;;AA2BjC,SAASC,eAAT,CAAyB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,KAAb;AAAoBC,EAAAA;AAApB,CAAzB,EAA2D;AAAEC,EAAAA;AAAF,CAA3D,EAAmE;AAClE,QAAMC,QAAQ,GAAGJ,SAAS,CAACG,EAAD,CAA1B;AACA,QAAME,MAAM,GAAGJ,KAAK,CAACG,QAAQ,CAACC,MAAV,CAApB;AAEA,QAAMC,UAAU,GAAGL,KAAK,CAACC,UAAD,CAAxB;AAEA,QAAMJ,MAAM,GAAGQ,UAAU,CAACC,OAAX,CAAmBJ,EAAnB,CAAf;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBX,MAAtB;AACA,SAAO;AACNM,IAAAA,QAAQ,EAAEA,QADJ;AAENP,IAAAA,IAAI,EAAES,UAFA;AAGNR,IAAAA,MAAM,EAAEA,MAAM,GACPM,QAAQ,CAACN,MAAD,CAAR,CAAiBY,IADV,GAEN,GAAEN,QAAQ,CAAC,WAAD,CAAR,CAAsBM,IAAK,SAAQN,QAAQ,CAAC,WAAD,CAAR,CAAsBM,IAAK;AALlE,GAAP;AAOA;;AAED,eAAenB,OAAO,CAACQ,eAAD,CAAP,CAAyBP,QAAzB,CAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Question extends Component {\n\trender() {\n\t\tconst { avatarURL, name } = this.props.user;\n\t\tconst { answer } = this.props\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className='user_asks'>\n\t\t\t\t\t<span>{name} asks:</span>\n\t\t\t\t</div>\n\t\t\t\t<div className='question-inner'>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={avatarURL}\n\t\t\t\t\t\talt={`Avatar of ${name}`}\n\t\t\t\t\t\tclassName=\"avatar\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"question-info\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span>Would you rather</span>\n\t\t\t\t\t\t\t<p>...{answer}...</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nfunction mapStateToProps({ questions, users, authedUser }, { id }) {\n\tconst question = questions[id];\n\tconst author = users[question.author]\n\n\tconst loggedUser = users[authedUser]\n\n\tconst answer = loggedUser.answers[id]\n\tconsole.log('Avatar', answer)\n\treturn {\n\t\tquestion: question,\n\t\tuser: loggedUser,\n\t\tanswer: answer\n\t      ? question[answer].text\n\t      : `${question['optionOne'].text}..or..${question['optionTwo'].text}`\n\t};\n}\n\nexport default connect(mapStateToProps)(Question);\n"]},"metadata":{},"sourceType":"module"}