{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/denis/Documents/UDACITY/react-game/src/components/Result.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Result extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      optionOne_class: \"\",\n      optionTwo_class: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const {\n      authedUser_answer\n    } = this.props;\n\n    if (authedUser_answer === \"optionOne\") {\n      this.setState({\n        optionOne_class: \"option selected\",\n        optionTwo_class: \"option\"\n      });\n    } else if (authedUser_answer === \"optionTwo\") {\n      this.setState({\n        optionOne_class: \"option\",\n        optionTwo_class: \"option selected\"\n      });\n    }\n  }\n\n  render() {\n    const {\n      avatarURL,\n      name\n    } = this.props.author;\n    const {\n      total_answers,\n      this_answer_count,\n      progress,\n      selected_option,\n      another_option\n    } = this.props;\n    const {\n      optionOne_class,\n      optionTwo_class\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container_body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user_asks\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Asked by \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatarURL,\n          alt: `Avatar of ${name}`,\n          className: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Results:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option selected\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Would you \", selected_option.text, \"?\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress_bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: `${progress}%`\n                },\n                className: \"progress\",\n                children: [progress, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"answer_count\",\n              children: [this_answer_count, \" out of \", total_answers, \" votes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Would you \", another_option.text, \"?\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress_bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: `${progress}%`\n                },\n                className: \"progress\",\n                children: [progress, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"answer_count\",\n              children: [this_answer_count, \" out of \", total_answers, \" votes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nfunction mapStateToProsp({\n  authedUser,\n  questions,\n  users\n}, props) {\n  const {\n    id\n  } = props.match.params;\n  const question = questions[id];\n  const author = users[question.author];\n  const total_answers = Object.keys(question.optionTwo.votes).length + Object.keys(question.optionOne.votes).length;\n  const authedUser_answer = users[authedUser].answers[id];\n  const selected_option = question[authedUser_answer];\n  let another_option = '';\n\n  if (selected_option.text === question.optionOne.text) {\n    another_option = question.optionTwo;\n  } else {\n    another_option = question.optionOne;\n  }\n\n  console.log('selected', selected_option);\n  console.log('another_option', another_option);\n  const this_answer_count = Object.keys(question[authedUser_answer].votes).length;\n  return {\n    total_answers,\n    authedUser_answer,\n    this_answer_count,\n    author,\n    progress: (this_answer_count * 100 / total_answers).toFixed(1),\n    selected_option,\n    another_option\n  };\n}\n\nexport default connect(mapStateToProsp)(Result);","map":{"version":3,"sources":["/Users/denis/Documents/UDACITY/react-game/src/components/Result.js"],"names":["React","Component","connect","Result","state","optionOne_class","optionTwo_class","componentDidMount","authedUser_answer","props","setState","render","avatarURL","name","author","total_answers","this_answer_count","progress","selected_option","another_option","text","width","mapStateToProsp","authedUser","questions","users","id","match","params","question","Object","keys","optionTwo","votes","length","optionOne","answers","console","log","toFixed"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\n\nclass Result extends Component {\n\tstate = {\n\t\toptionOne_class: \"\",\n\t\toptionTwo_class: \"\",\n\t}\n\tcomponentDidMount() {\n\t\tconst { authedUser_answer } = this.props\n\t\tif (authedUser_answer === \"optionOne\") {\n\t\t\tthis.setState({\n\t\t\t\toptionOne_class: \"option selected\",\n\t\t\t\toptionTwo_class: \"option\",\n\t\t\t})\n\t\t} else if (authedUser_answer === \"optionTwo\") {\n\t\t\tthis.setState({\n\t\t\t\toptionOne_class: \"option\",\n\t\t\t\toptionTwo_class: \"option selected\",\n\t\t\t})\n\t\t}\n\t}\n\trender() {\n\t\tconst { avatarURL, name } = this.props.author\n\t\tconst { total_answers, this_answer_count, progress, selected_option, another_option } = this.props\n\t\tconst { optionOne_class, optionTwo_class } = this.state\n\n\t\treturn (\n\t\t\t<div className=\"container_body\">\n\t\t\t\t<div className=\"user_asks\">\n\t\t\t\t\t<span>Asked by {name}</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"question-inner\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={avatarURL}\n\t\t\t\t\t\talt={`Avatar of ${name}`}\n\t\t\t\t\t\tclassName=\"avatar\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"result-info\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span>Results:</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='option selected'>\n\t\t\t\t\t\t\t<p>Would you {selected_option.text}?</p>\n\t\t\t\t\t\t\t<div className=\"progress_bar\">\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tstyle={{ width: `${progress}%` }}\n\t\t\t\t\t\t\t\t\tclassName=\"progress\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{progress}%\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<p className=\"answer_count\">\n\t\t\t\t\t\t\t\t{this_answer_count} out of {total_answers} votes\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='option'>\n\t\t\t\t\t\t\t<p>Would you {another_option.text}?</p>\n\t\t\t\t\t\t\t<div className=\"progress_bar\">\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tstyle={{ width: `${progress}%` }}\n\t\t\t\t\t\t\t\t\tclassName=\"progress\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{progress}%\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<p className=\"answer_count\">\n\t\t\t\t\t\t\t\t{this_answer_count} out of {total_answers} votes\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nfunction mapStateToProsp({ authedUser, questions, users }, props) {\n\tconst { id } = props.match.params\n\tconst question = questions[id]\n\tconst author = users[question.author]\n\tconst total_answers =\n\t\tObject.keys(question.optionTwo.votes).length +\n\t\tObject.keys(question.optionOne.votes).length\n\n\tconst authedUser_answer = users[authedUser].answers[id]\n\tconst selected_option = question[authedUser_answer]\n\tlet another_option = ''\n\tif (selected_option.text === question.optionOne.text ) {\n\t\tanother_option = question.optionTwo\n\t} else {\n\t\tanother_option = question.optionOne\n\t}\n\tconsole.log('selected', selected_option)\n\tconsole.log('another_option', another_option)\n\n\tconst this_answer_count = Object.keys(question[authedUser_answer].votes)\n\t\t.length\n\n\treturn {\n\t\ttotal_answers,\n\t\tauthedUser_answer,\n\t\tthis_answer_count,\n\t\tauthor,\n\t\tprogress: ((this_answer_count * 100) / total_answers).toFixed(1),\n\t\tselected_option,\n\t\tanother_option,\n\t}\n}\n\nexport default connect(mapStateToProsp)(Result)\n"]},"metadata":{},"sourceType":"module"}