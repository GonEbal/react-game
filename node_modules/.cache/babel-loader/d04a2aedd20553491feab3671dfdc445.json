{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/denis/Documents/UDACITY/react-game/src/components/Result.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Result extends Component {\n  render() {\n    const {\n      avatarURL,\n      name\n    } = this.props.author;\n    const {\n      total_answers,\n      selected_option_count,\n      another_option_count,\n      selected_option_progress,\n      another_option_progress,\n      selected_option,\n      another_option\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container_body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user_asks\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Asked by \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatarURL,\n          alt: `Avatar of ${name}`,\n          className: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Results:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option selected\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Would you \", selected_option.text, \"?\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress_bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: `${selected_option_progress}%`\n                },\n                className: \"progress\",\n                children: [selected_option_progress, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"answer_count\",\n              children: [selected_option_count, \" out of \", total_answers, \" \", \"votes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Would you \", another_option.text, \"?\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress_bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: `${another_option_progress}%`\n                },\n                className: \"progress\",\n                children: [another_option_progress, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"answer_count\",\n              children: [another_option_count, \" out of \", total_answers, \" \", \"votes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nfunction mapStateToProsp({\n  authedUser,\n  questions,\n  users\n}, props) {\n  const {\n    id\n  } = props.match.params;\n  const question = questions[id];\n  const author = users[question.author];\n  const total_answers = Object.keys(question.optionTwo.votes).length + Object.keys(question.optionOne.votes).length;\n  const authedUser_answer = users[authedUser].answers[id];\n  const selected_option = question[authedUser_answer];\n  let another_option = \"\";\n\n  if (selected_option.text === question.optionOne.text) {\n    another_option = question.optionTwo;\n  } else {\n    another_option = question.optionOne;\n  }\n\n  const selected_option_count = Object.keys(selected_option.votes).length;\n  const another_option_count = Object.keys(another_option.votes).length;\n  return {\n    author,\n    total_answers,\n    authedUser_answer,\n    selected_option_count,\n    another_option_count,\n    selected_option_progress: (selected_option_count * 100 / total_answers).toFixed(1),\n    another_option_progress: (another_option_count * 100 / total_answers).toFixed(1),\n    selected_option,\n    another_option\n  };\n}\n\nexport default connect(mapStateToProsp)(Result);","map":{"version":3,"sources":["/Users/denis/Documents/UDACITY/react-game/src/components/Result.js"],"names":["React","Component","connect","Result","render","avatarURL","name","props","author","total_answers","selected_option_count","another_option_count","selected_option_progress","another_option_progress","selected_option","another_option","text","width","mapStateToProsp","authedUser","questions","users","id","match","params","question","Object","keys","optionTwo","votes","length","optionOne","authedUser_answer","answers","toFixed"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\n\nclass Result extends Component {\n\trender() {\n\t\tconst { avatarURL, name } = this.props.author\n\t\tconst {\n\t\t\ttotal_answers,\n\t\t\tselected_option_count,\n\t\t\tanother_option_count,\n\t\t\tselected_option_progress,\n\t\t\tanother_option_progress,\n\t\t\tselected_option,\n\t\t\tanother_option,\n\t\t} = this.props\n\n\t\treturn (\n\t\t\t<div className=\"container_body\">\n\t\t\t\t<div className=\"user_asks\">\n\t\t\t\t\t<span>Asked by {name}</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"question-inner\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={avatarURL}\n\t\t\t\t\t\talt={`Avatar of ${name}`}\n\t\t\t\t\t\tclassName=\"avatar\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"result-info\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span>Results:</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"option selected\">\n\t\t\t\t\t\t\t<p>Would you {selected_option.text}?</p>\n\t\t\t\t\t\t\t<div className=\"progress_bar\">\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\twidth: `${selected_option_progress}%`,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tclassName=\"progress\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{selected_option_progress}%\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<p className=\"answer_count\">\n\t\t\t\t\t\t\t\t{selected_option_count} out of {total_answers}{\" \"}\n\t\t\t\t\t\t\t\tvotes\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"option\">\n\t\t\t\t\t\t\t<p>Would you {another_option.text}?</p>\n\t\t\t\t\t\t\t<div className=\"progress_bar\">\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\twidth: `${another_option_progress}%`,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tclassName=\"progress\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{another_option_progress}%\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<p className=\"answer_count\">\n\t\t\t\t\t\t\t\t{another_option_count} out of {total_answers}{\" \"}\n\t\t\t\t\t\t\t\tvotes\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nfunction mapStateToProsp({ authedUser, questions, users }, props) {\n\tconst { id } = props.match.params\n\tconst question = questions[id]\n\tconst author = users[question.author]\n\tconst total_answers =\n\t\tObject.keys(question.optionTwo.votes).length +\n\t\tObject.keys(question.optionOne.votes).length\n\n\tconst authedUser_answer = users[authedUser].answers[id]\n\n\tconst selected_option = question[authedUser_answer]\n\tlet another_option = \"\"\n\tif (selected_option.text === question.optionOne.text) {\n\t\tanother_option = question.optionTwo\n\t} else {\n\t\tanother_option = question.optionOne\n\t}\n\n\tconst selected_option_count = Object.keys(selected_option.votes).length\n\tconst another_option_count = Object.keys(another_option.votes).length\n\n\treturn {\n\t\tauthor,\n\t\ttotal_answers,\n\t\tauthedUser_answer,\n\t\tselected_option_count,\n\t\tanother_option_count,\n\t\tselected_option_progress: (\n\t\t\t(selected_option_count * 100) /\n\t\t\ttotal_answers\n\t\t).toFixed(1),\n\t\tanother_option_progress: (\n\t\t\t(another_option_count * 100) /\n\t\t\ttotal_answers\n\t\t).toFixed(1),\n\t\tselected_option,\n\t\tanother_option,\n\t}\n}\n\nexport default connect(mapStateToProsp)(Result)\n"]},"metadata":{},"sourceType":"module"}