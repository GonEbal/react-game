{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/denis/Documents/UDACITY/react-game/src/components/LeaderBoard.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport LeaderBoardUser from \"./LeaderBoardUser\";\n\nclass LeaderBoard extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard\",\n      children: this.props.users.map(id => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"question\",\n        children: /*#__PURE__*/_jsxDEV(LeaderBoardUser, {\n          id: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 17\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  users\n}) {\n  var sorted_categories = Object.values(users).sort(function (one, other) {\n    console.log('ONE:', Object.values(one.answers).length);\n    console.log('OTHER:', other.answers.length + other.questions.length);\n    return Object.values(one.answers).length + Object.values(one.questions).length - (Object.values(other.answers).length + Object.values(other.questions).length);\n  });\n  console.log(sorted_categories);\n  return {\n    users: Object.values(users).map(user => user.id)\n  };\n}\n\nexport default connect(mapStateToProps)(LeaderBoard);","map":{"version":3,"sources":["/Users/denis/Documents/UDACITY/react-game/src/components/LeaderBoard.js"],"names":["React","Component","connect","LeaderBoardUser","LeaderBoard","render","props","users","map","id","mapStateToProps","sorted_categories","Object","values","sort","one","other","console","log","answers","length","questions","user"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AACnCI,EAAAA,MAAM,GAAG;AACR,wBACC;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACE,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAsBC,EAAD,iBACZ;AAAa,QAAA,SAAS,EAAC,UAAvB;AAAA,+BACE,QAAC,eAAD;AAAiB,UAAA,EAAE,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA;AADF,SAASA,EAAT;AAAA;AAAA;AAAA;AAAA,cADT;AADF;AAAA;AAAA;AAAA;AAAA,YADD;AASA;;AAXkC;;AAcpC,SAASC,eAAT,CAAyB;AAAEH,EAAAA;AAAF,CAAzB,EAAoC;AACnC,MAAII,iBAAiB,GAAGC,MAAM,CAACC,MAAP,CAAcN,KAAd,EAAqBO,IAArB,CAA0B,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AACvEC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBN,MAAM,CAACC,MAAP,CAAcE,GAAG,CAACI,OAAlB,EAA2BC,MAA/C;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,KAAK,CAACG,OAAN,CAAcC,MAAd,GAAuBJ,KAAK,CAACK,SAAN,CAAgBD,MAA7D;AACE,WAAQR,MAAM,CAACC,MAAP,CAAcE,GAAG,CAACI,OAAlB,EAA2BC,MAA3B,GAAoCR,MAAM,CAACC,MAAP,CAAcE,GAAG,CAACM,SAAlB,EAA6BD,MAAlE,IAA6ER,MAAM,CAACC,MAAP,CAAcG,KAAK,CAACG,OAApB,EAA6BC,MAA7B,GAAsCR,MAAM,CAACC,MAAP,CAAcG,KAAK,CAACK,SAApB,EAA+BD,MAAlJ,CAAP;AACF,GAJuB,CAAxB;AAKAH,EAAAA,OAAO,CAACC,GAAR,CAAYP,iBAAZ;AACA,SAAO;AACNJ,IAAAA,KAAK,EAAEK,MAAM,CAACC,MAAP,CAAcN,KAAd,EAAqBC,GAArB,CAA0Bc,IAAD,IAAUA,IAAI,CAACb,EAAxC;AADD,GAAP;AAGA;;AAED,eAAeP,OAAO,CAACQ,eAAD,CAAP,CAAyBN,WAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport LeaderBoardUser from \"./LeaderBoardUser\"\n\nclass LeaderBoard extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className='leaderboard'>\n\t\t\t\t{this.props.users.map((id) => (\n\t\t            <li key={id} className=\"question\">\n\t\t              <LeaderBoardUser id={id} />\n\t\t            </li>\n\t\t          ))}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nfunction mapStateToProps({ users }) {\n\tvar sorted_categories = Object.values(users).sort(function (one, other) {\n\t\tconsole.log('ONE:', Object.values(one.answers).length)\n\t\tconsole.log('OTHER:', other.answers.length + other.questions.length)\n\t   return (Object.values(one.answers).length + Object.values(one.questions).length) - (Object.values(other.answers).length + Object.values(other.questions).length)\n\t})\n\tconsole.log(sorted_categories)\n\treturn {\n\t\tusers: Object.values(users).map((user) => user.id)\n\t}\n}\n\nexport default connect(mapStateToProps)(LeaderBoard)"]},"metadata":{},"sourceType":"module"}