{"ast":null,"code":"import { RECEIVE_QUESTIONS, ADD_QUESTION_ANSWER } from '../actions/questions';\nexport default function questions(state = {}, action) {\n  switch (action.type) {\n    case RECEIVE_QUESTIONS:\n      return { ...state,\n        ...action.questions\n      };\n\n    case ADD_QUESTION_ANSWER:\n      console.log('Action', action); //const { answer } = action\n\n      return {\n        state // ...state,\n        //       [action.qid]: {\n        //       \t...state[action.qid],\n        //       \t[action.answer]: {\n        //       \t\t...state[action.qid][answer],\n        //       \t\tvotes: state[action.qid][answer].votes.concat([action.authedUser])\n        //       \t}\n        //           //optionOne: state[action.qid].optionOne.votes.concat([action.authedUser])\n        //       }\n\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/denis/Documents/UDACITY/react-game/src/reducers/questions.js"],"names":["RECEIVE_QUESTIONS","ADD_QUESTION_ANSWER","questions","state","action","type","console","log"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,mBAA5B,QAAuD,sBAAvD;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAK,GAAG,EAA3B,EAA+BC,MAA/B,EAAuC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,iBAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEH,WAAGC,MAAM,CAACF;AAFP,OAAP;;AAIJ,SAAKD,mBAAL;AACCK,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,MAAtB,EADD,CAEC;;AACA,aAAO;AAAED,QAAAA,KAAF,CACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AATM,OAAP;;AAWD;AACI,aAAOA,KAAP;AArBR;AAuBH","sourcesContent":["import { RECEIVE_QUESTIONS, ADD_QUESTION_ANSWER } from '../actions/questions'\n\nexport default function questions(state = {}, action) {\n    switch (action.type) {\n        case RECEIVE_QUESTIONS:\n            return {\n                ...state,\n                ...action.questions\n            }\n        case ADD_QUESTION_ANSWER:\n        \tconsole.log('Action', action)\n        \t//const { answer } = action\n        \treturn { state\n        \t\t// ...state,\n          //       [action.qid]: {\n          //       \t...state[action.qid],\n          //       \t[action.answer]: {\n          //       \t\t...state[action.qid][answer],\n          //       \t\tvotes: state[action.qid][answer].votes.concat([action.authedUser])\n          //       \t}\n          //           //optionOne: state[action.qid].optionOne.votes.concat([action.authedUser])\n          //       }\n        \t}\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}