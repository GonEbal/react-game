{"ast":null,"code":"import { saveQuestion, saveQuestionAnswer } from \"../utils/api\";\nimport { showLoading, hideLoading } from \"react-redux-loading\";\nexport const RECEIVE_QUESTIONS = \"RECEIVE_QUESTIONS\";\nexport const ADD_QUESTION_ANSWER = \"ADD_QUESTION_ANSWER\";\nexport const ADD_QUESTION_ANSWER_USER = \"ADD_QUESTION_ANSWER_USER\";\nexport const ADD_QUESTION = \"ADD_QUESTION\";\nexport function receiveQuestions(questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions\n  };\n}\n\nfunction addQuestion(question) {\n  return {\n    type: ADD_QUESTION,\n    question\n  };\n}\n\nexport function handleAddQuestion(authedUser, qid, answer) {\n  return (dispatch, getState) => {\n    const {\n      authedUser\n    } = getState();\n    dispatch(showLoading());\n    return saveQuestion({\n      qid,\n      author: authedUser,\n      answer\n    }).then(question => dispatch(addQuestion(question))).then(() => dispatch(hideLoading()));\n  };\n}\n\nfunction questionAswer({\n  authedUser,\n  qid,\n  answer\n}) {\n  return {\n    type: ADD_QUESTION_ANSWER,\n    authedUser,\n    qid,\n    answer\n  };\n}\n\nfunction questionAswerUser({\n  authedUser,\n  qid,\n  answer\n}) {\n  return {\n    type: ADD_QUESTION_ANSWER_USER,\n    authedUser,\n    qid,\n    answer\n  };\n}\n\nexport function handleAddQuestionAswer(info) {\n  return dispatch => {\n    dispatch(questionAswer(info));\n    dispatch(questionAswerUser(info));\n    return saveQuestionAnswer(info).catch(e => {\n      console.warn(\"Error in handleAddQuestionAswer: \", e);\n      dispatch(questionAswer(info));\n      alert(\"The was an error. Try again.\");\n    });\n  };\n}","map":{"version":3,"sources":["/Users/denis/Documents/UDACITY/react-game/src/actions/questions.js"],"names":["saveQuestion","saveQuestionAnswer","showLoading","hideLoading","RECEIVE_QUESTIONS","ADD_QUESTION_ANSWER","ADD_QUESTION_ANSWER_USER","ADD_QUESTION","receiveQuestions","questions","type","addQuestion","question","handleAddQuestion","authedUser","qid","answer","dispatch","getState","author","then","questionAswer","questionAswerUser","handleAddQuestionAswer","info","catch","e","console","warn","alert"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,kBAAvB,QAAiD,cAAjD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,qBAAzC;AAEA,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AAEP,OAAO,SAASC,gBAAT,CAA0BC,SAA1B,EAAqC;AAC1C,SAAO;AACLC,IAAAA,IAAI,EAAEN,iBADD;AAELK,IAAAA;AAFK,GAAP;AAID;;AAED,SAASE,WAAT,CAAqBC,QAArB,EAA+B;AAC7B,SAAO;AACLF,IAAAA,IAAI,EAAEH,YADD;AAELK,IAAAA;AAFK,GAAP;AAID;;AAED,OAAO,SAASC,iBAAT,CAA2BC,UAA3B,EAAuCC,GAAvC,EAA4CC,MAA5C,EAAoD;AACzD,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7B,UAAM;AAAEJ,MAAAA;AAAF,QAAiBI,QAAQ,EAA/B;AACAD,IAAAA,QAAQ,CAACf,WAAW,EAAZ,CAAR;AAEA,WAAOF,YAAY,CAAC;AAClBe,MAAAA,GADkB;AAElBI,MAAAA,MAAM,EAAEL,UAFU;AAGlBE,MAAAA;AAHkB,KAAD,CAAZ,CAKJI,IALI,CAKER,QAAD,IAAcK,QAAQ,CAACN,WAAW,CAACC,QAAD,CAAZ,CALvB,EAMJQ,IANI,CAMC,MAAMH,QAAQ,CAACd,WAAW,EAAZ,CANf,CAAP;AAOD,GAXD;AAYD;;AAED,SAASkB,aAAT,CAAuB;AAAEP,EAAAA,UAAF;AAAcC,EAAAA,GAAd;AAAmBC,EAAAA;AAAnB,CAAvB,EAAoD;AAClD,SAAO;AACLN,IAAAA,IAAI,EAAEL,mBADD;AAELS,IAAAA,UAFK;AAGLC,IAAAA,GAHK;AAILC,IAAAA;AAJK,GAAP;AAMD;;AAED,SAASM,iBAAT,CAA2B;AAAER,EAAAA,UAAF;AAAcC,EAAAA,GAAd;AAAmBC,EAAAA;AAAnB,CAA3B,EAAwD;AACtD,SAAO;AACLN,IAAAA,IAAI,EAAEJ,wBADD;AAELQ,IAAAA,UAFK;AAGLC,IAAAA,GAHK;AAILC,IAAAA;AAJK,GAAP;AAMD;;AAED,OAAO,SAASO,sBAAT,CAAgCC,IAAhC,EAAsC;AAC3C,SAAQP,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACI,aAAa,CAACG,IAAD,CAAd,CAAR;AACAP,IAAAA,QAAQ,CAACK,iBAAiB,CAACE,IAAD,CAAlB,CAAR;AAEA,WAAOvB,kBAAkB,CAACuB,IAAD,CAAlB,CAAyBC,KAAzB,CAAgCC,CAAD,IAAO;AAC3CC,MAAAA,OAAO,CAACC,IAAR,CAAa,mCAAb,EAAkDF,CAAlD;AACAT,MAAAA,QAAQ,CAACI,aAAa,CAACG,IAAD,CAAd,CAAR;AACAK,MAAAA,KAAK,CAAC,8BAAD,CAAL;AACD,KAJM,CAAP;AAKD,GATD;AAUD","sourcesContent":["import { saveQuestion, saveQuestionAnswer } from \"../utils/api\"\nimport { showLoading, hideLoading } from \"react-redux-loading\"\n\nexport const RECEIVE_QUESTIONS = \"RECEIVE_QUESTIONS\"\nexport const ADD_QUESTION_ANSWER = \"ADD_QUESTION_ANSWER\"\nexport const ADD_QUESTION_ANSWER_USER = \"ADD_QUESTION_ANSWER_USER\"\nexport const ADD_QUESTION = \"ADD_QUESTION\"\n\nexport function receiveQuestions(questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions,\n  }\n}\n\nfunction addQuestion(question) {\n  return {\n    type: ADD_QUESTION,\n    question,\n  }\n}\n\nexport function handleAddQuestion(authedUser, qid, answer) {\n  return (dispatch, getState) => {\n    const { authedUser } = getState()\n    dispatch(showLoading())\n\n    return saveQuestion({\n      qid,\n      author: authedUser,\n      answer,\n    })\n      .then((question) => dispatch(addQuestion(question)))\n      .then(() => dispatch(hideLoading()))\n  }\n}\n\nfunction questionAswer({ authedUser, qid, answer }) {\n  return {\n    type: ADD_QUESTION_ANSWER,\n    authedUser,\n    qid,\n    answer,\n  }\n}\n\nfunction questionAswerUser({ authedUser, qid, answer }) {\n  return {\n    type: ADD_QUESTION_ANSWER_USER,\n    authedUser,\n    qid,\n    answer,\n  }\n}\n\nexport function handleAddQuestionAswer(info) {\n  return (dispatch) => {\n    dispatch(questionAswer(info))\n    dispatch(questionAswerUser(info))\n\n    return saveQuestionAnswer(info).catch((e) => {\n      console.warn(\"Error in handleAddQuestionAswer: \", e)\n      dispatch(questionAswer(info))\n      alert(\"The was an error. Try again.\")\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}