{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/denis/Documents/UDACITY/react-game/src/components/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Question from \"./Question\";\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.unanswered = () => {\n      const container = document.getElementById('container_list');\n      container.classList.add(\"right-panel-active\");\n    };\n\n    this.answered = () => {\n      const container = document.getElementById('container_list');\n      container.classList.remove(\"right-panel-active\");\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container_list\",\n        id: \"container_list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-container_list sign-up-container_list\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Unanswered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-container_list sign-in-container_list\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Answered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"overlay-container_list\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"overlay\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"overlay-panel overlay-left\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Don't feel to answer?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Wanna see answered questions?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                class: \"ghost\",\n                id: \"signIn\",\n                onClick: this.answered,\n                children: \"View Answered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"overlay-panel overlay-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Want more questions?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Check out all questions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                class: \"ghost\",\n                id: \"signUp\",\n                onClick: this.unanswered,\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"dashboard-list\",\n        children: this.props.questionIds.map(id => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"question\",\n          children: /*#__PURE__*/_jsxDEV(Question, {\n            id: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  questions\n}) {\n  return {\n    questionIds: Object.keys(questions).sort((a, b) => questions[b].timestamp - questions[a].timestamp)\n  };\n}\n\nexport default connect(mapStateToProps)(Dashboard);","map":{"version":3,"sources":["/Users/denis/Documents/UDACITY/react-game/src/components/Dashboard.js"],"names":["React","Component","connect","Question","Dashboard","unanswered","container","document","getElementById","classList","add","answered","remove","render","props","questionIds","map","id","mapStateToProps","questions","Object","keys","sort","a","b","timestamp"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport Question from \"./Question\"\n\nclass Dashboard extends Component {\n  unanswered = () => {\n    const container = document.getElementById('container_list')\n    container.classList.add(\"right-panel-active\")\n  }\n  answered = () => {\n    const container = document.getElementById('container_list')\n    container.classList.remove(\"right-panel-active\")\n  }\n\n  render() {\n    return (\n      <div>\n        <div class=\"container_list\" id=\"container_list\">\n    <div class=\"form-container_list sign-up-container_list\">\n        <form>\n            <h1>Unanswered</h1>\n        </form>\n    </div>\n    <div class=\"form-container_list sign-in-container_list\">\n        <form>\n            <h1>Answered</h1>\n        </form>\n    </div>\n    <div class=\"overlay-container_list\">\n        <div class=\"overlay\">\n            <div class=\"overlay-panel overlay-left\">\n                <h1>Don't feel to answer?</h1>\n                <p>Wanna see answered questions?</p>\n                <button \n                class=\"ghost\" \n                id=\"signIn\"\n                onClick={this.answered}\n                >\n                View Answered</button>\n            </div>\n            <div class=\"overlay-panel overlay-right\">\n                <h1>Want more questions?</h1>\n                <p>Check out all questions</p>\n                <button class=\"ghost\"\n                 id=\"signUp\"\n                 onClick={this.unanswered}\n                 >\n                View</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n        <ul className=\"dashboard-list\">\n          {this.props.questionIds.map((id) => (\n            <li key={id} className=\"question\">\n              <Question id={id} />\n            </li>\n          ))}\n        </ul>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps({ questions }) {\n  return {\n    questionIds: Object.keys(questions).sort(\n      (a, b) => questions[b].timestamp - questions[a].timestamp\n    ),\n  }\n}\n\nexport default connect(mapStateToProps)(Dashboard)\n"]},"metadata":{},"sourceType":"module"}