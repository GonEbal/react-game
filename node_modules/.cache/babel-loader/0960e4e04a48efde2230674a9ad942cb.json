{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/denis/Documents/UDACITY/react-game/src/components/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Question from \"./Question\";\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.unanswered = () => {\n      const container = document.getElementById(\"container_list\");\n      container.classList.add(\"right-panel-active\");\n    };\n\n    this.answered = () => {\n      const container = document.getElementById(\"container_list\");\n      container.classList.remove(\"right-panel-active\");\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container_body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        display: \"none\",\n        children: this.props.unanswered_q.map(id => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"question\",\n          children: /*#__PURE__*/_jsxDEV(Question, {\n            id: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  questions,\n  authedUser,\n  users\n}) {\n  const answered_questions = Object.values(questions).filter(valueName => valueName.optionOne.votes.includes(authedUser) || valueName.optionTwo.votes.includes(authedUser));\n  const unanswered_questions = Object.values(questions).filter(valueName => !valueName.optionOne.votes.includes(authedUser) && !valueName.optionTwo.votes.includes(authedUser));\n  return {\n    unanswered_q: Object.values(unanswered_questions).map(item => item.id),\n    answered_q: Object.values(answered_questions).map(item => item.id)\n  };\n}\n\nexport default connect(mapStateToProps)(Dashboard);","map":{"version":3,"sources":["/Users/denis/Documents/UDACITY/react-game/src/components/Dashboard.js"],"names":["React","Component","connect","Question","Dashboard","unanswered","container","document","getElementById","classList","add","answered","remove","render","props","unanswered_q","map","id","mapStateToProps","questions","authedUser","users","answered_questions","Object","values","filter","valueName","optionOne","votes","includes","optionTwo","unanswered_questions","item","answered_q"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAChCI,UADgC,GACnB,MAAM;AACjB,YAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAAlB;AACAF,MAAAA,SAAS,CAACG,SAAV,CAAoBC,GAApB,CAAwB,oBAAxB;AACD,KAJ+B;;AAAA,SAKhCC,QALgC,GAKrB,MAAM;AACf,YAAML,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAAlB;AACAF,MAAAA,SAAS,CAACG,SAAV,CAAoBG,MAApB,CAA2B,oBAA3B;AACD,KAR+B;AAAA;;AAShCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACE;AAAK,QAAA,OAAO,EAAC,MAAb;AAAA,kBACG,KAAKC,KAAL,CAAWC,YAAX,CAAwBC,GAAxB,CAA6BC,EAAD,iBAC3B;AAAa,UAAA,SAAS,EAAC,UAAvB;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,EAAE,EAAEA;AAAd;AAAA;AAAA;AAAA;AAAA;AADF,WAASA,EAAT;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AArB+B;;AAwBlC,SAASC,eAAT,CAAyB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,UAAb;AAAyBC,EAAAA;AAAzB,CAAzB,EAA2D;AACzD,QAAMC,kBAAkB,GAAGC,MAAM,CAACC,MAAP,CAAcL,SAAd,EAAyBM,MAAzB,CACxBC,SAAD,IACEA,SAAS,CAACC,SAAV,CAAoBC,KAApB,CAA0BC,QAA1B,CAAmCT,UAAnC,KACAM,SAAS,CAACI,SAAV,CAAoBF,KAApB,CAA0BC,QAA1B,CAAmCT,UAAnC,CAHuB,CAA3B;AAMA,QAAMW,oBAAoB,GAAGR,MAAM,CAACC,MAAP,CAAcL,SAAd,EAAyBM,MAAzB,CAC1BC,SAAD,IACE,CAACA,SAAS,CAACC,SAAV,CAAoBC,KAApB,CAA0BC,QAA1B,CAAmCT,UAAnC,CAAD,IACA,CAACM,SAAS,CAACI,SAAV,CAAoBF,KAApB,CAA0BC,QAA1B,CAAmCT,UAAnC,CAHwB,CAA7B;AAKA,SAAO;AACLL,IAAAA,YAAY,EAAEQ,MAAM,CAACC,MAAP,CAAcO,oBAAd,EAAoCf,GAApC,CAAyCgB,IAAD,IAAUA,IAAI,CAACf,EAAvD,CADT;AAELgB,IAAAA,UAAU,EAAEV,MAAM,CAACC,MAAP,CAAcF,kBAAd,EAAkCN,GAAlC,CAAuCgB,IAAD,IAAUA,IAAI,CAACf,EAArD;AAFP,GAAP;AAID;;AAED,eAAef,OAAO,CAACgB,eAAD,CAAP,CAAyBd,SAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport Question from \"./Question\"\n\nclass Dashboard extends Component {\n  unanswered = () => {\n    const container = document.getElementById(\"container_list\")\n    container.classList.add(\"right-panel-active\")\n  }\n  answered = () => {\n    const container = document.getElementById(\"container_list\")\n    container.classList.remove(\"right-panel-active\")\n  }\n  render() {\n    return (\n      <div className=\"container_body\">\n        <div display='none'>\n          {this.props.unanswered_q.map((id) => (\n            <li key={id} className=\"question\">\n              <Question id={id} />\n            </li>\n          ))}\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps({ questions, authedUser, users }) {\n  const answered_questions = Object.values(questions).filter(\n    (valueName) =>\n      valueName.optionOne.votes.includes(authedUser) ||\n      valueName.optionTwo.votes.includes(authedUser)\n  )\n\n  const unanswered_questions = Object.values(questions).filter(\n    (valueName) =>\n      !valueName.optionOne.votes.includes(authedUser) &&\n      !valueName.optionTwo.votes.includes(authedUser)\n  )\n  return {\n    unanswered_q: Object.values(unanswered_questions).map((item) => item.id),\n    answered_q: Object.values(answered_questions).map((item) => item.id),\n  }\n}\n\nexport default connect(mapStateToProps)(Dashboard)\n"]},"metadata":{},"sourceType":"module"}