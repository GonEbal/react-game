{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/denis/Documents/UDACITY/react-game/src/components/QuestionPage.js\";\nimport React, { Component } from \"react\";\nimport { handleAddQuestionAswer } from '../actions/questions';\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\n\nclass QuestionPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedOption: \"optionOne\",\n      toResult: false\n    };\n\n    this.handleOptionChange = e => {\n      this.setState({\n        selectedOption: e.target.value\n      });\n    };\n\n    this.handleFormSubmit = formSubmitEvent => {\n      formSubmitEvent.preventDefault();\n      const {\n        selectedOption\n      } = this.state;\n      const {\n        id,\n        authedUser,\n        dispatch\n      } = this.props;\n      dispatch(handleAddQuestionAswer({\n        authedUser,\n        qid: id,\n        answer: selectedOption\n      }));\n    };\n  }\n\n  render() {\n    const {\n      question,\n      id\n    } = this.props;\n    const {\n      avatarURL,\n      name\n    } = this.props.author;\n    const {\n      toResult\n    } = this.state;\n\n    if (toResult === true) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container_body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user_asks\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [name, \" asks:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatarURL,\n          alt: `Avatar of ${name}`,\n          className: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Would you rather...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: this.handleFormSubmit,\n              className: \"radio_input\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  value: \"optionOne\",\n                  checked: this.state.selectedOption === \"optionOne\",\n                  onChange: this.handleOptionChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 10\n                }, this), question.optionOne.text]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  value: \"optionTwo\",\n                  checked: this.state.selectedOption === \"optionTwo\",\n                  onChange: this.handleOptionChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 10\n                }, this), question.optionTwo.text]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"submit_poll_btn\",\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nfunction mapStateToProsp({\n  authedUser,\n  questions,\n  users\n}, props) {\n  const {\n    id\n  } = props.match.params;\n  const question = questions[id];\n  const author = users[question.author];\n  return {\n    id,\n    authedUser,\n    author,\n    question: question\n  };\n}\n\nexport default connect(mapStateToProsp)(QuestionPage);","map":{"version":3,"sources":["/Users/denis/Documents/UDACITY/react-game/src/components/QuestionPage.js"],"names":["React","Component","handleAddQuestionAswer","connect","Redirect","QuestionPage","state","selectedOption","toResult","handleOptionChange","e","setState","target","value","handleFormSubmit","formSubmitEvent","preventDefault","id","authedUser","dispatch","props","qid","answer","render","question","avatarURL","name","author","optionOne","text","optionTwo","mapStateToProsp","questions","users","match","params"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { handleAddQuestionAswer } from '../actions/questions'\nimport { connect } from \"react-redux\"\nimport { Redirect } from 'react-router-dom'\n\nclass QuestionPage extends Component {\n\tstate = {\n\t\tselectedOption: \"optionOne\",\n\t\ttoResult: false,\n\t}\n\n\thandleOptionChange = (e) => {\n\t\tthis.setState({\n\t\t\tselectedOption: e.target.value,\n\t\t})\n\t}\n\thandleFormSubmit = (formSubmitEvent) => {\n\t\tformSubmitEvent.preventDefault()\n\t\tconst { selectedOption } = this.state\n\t\tconst { id, authedUser, dispatch } = this.props\n\n\t\tdispatch(handleAddQuestionAswer({\n\t\t\tauthedUser,\n\t\t\tqid: id, \n\t\t\tanswer: selectedOption\n\t\t}))\n\t}\n\trender() {\n\t\tconst { question, id } = this.props\n\t\tconst { avatarURL, name } = this.props.author\n\t\tconst { toResult } = this.state\n\n\t    if (toResult === true) {\n\t      return <Redirect to='/result' />\n\t    }\n\t\treturn (\n\t\t\t<div className=\"container_body\">\n\t\t\t\t<div className=\"user_asks\">\n\t\t\t\t\t<span>{name} asks:</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"question-inner\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={avatarURL}\n\t\t\t\t\t\talt={`Avatar of ${name}`}\n\t\t\t\t\t\tclassName=\"avatar\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"question-info\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span>Would you rather...</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<form\n\t\t\t\t\t\t\t\tonSubmit={this.handleFormSubmit}\n\t\t\t\t\t\t\t\tclassName=\"radio_input\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\t\t\tvalue=\"optionOne\"\n\t\t\t\t\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t\t\t\t\tthis.state.selectedOption ===\n\t\t\t\t\t\t\t\t\t\t\t\"optionOne\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleOptionChange}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{question.optionOne.text}\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\t\t\tvalue=\"optionTwo\"\n\t\t\t\t\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t\t\t\t\tthis.state.selectedOption ===\n\t\t\t\t\t\t\t\t\t\t\t\"optionTwo\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleOptionChange}\n\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t{question.optionTwo.text}\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName=\"submit_poll_btn\"\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nfunction mapStateToProsp({ authedUser, questions, users }, props) {\n\tconst { id } = props.match.params\n\tconst question = questions[id]\n\tconst author = users[question.author]\n\n\treturn {\n\t\tid,\n\t\tauthedUser,\n\t\tauthor,\n\t\tquestion: question,\n\t}\n}\n\nexport default connect(mapStateToProsp)(QuestionPage)\n"]},"metadata":{},"sourceType":"module"}