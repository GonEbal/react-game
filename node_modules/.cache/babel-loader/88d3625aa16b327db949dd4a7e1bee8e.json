{"ast":null,"code":"import { RECEIVE_QUESTIONS, ADD_QUESTION_ANSWER } from '../actions/questions';\nexport default function questions(state = {}, action) {\n  switch (action.type) {\n    case RECEIVE_QUESTIONS:\n      return { ...state,\n        ...action.questions\n      };\n\n    case ADD_QUESTION_ANSWER:\n      return { ...state,\n        [action.id]: { ...state[action.id],\n          likes: action.hasLiked === true ? state[action.id].likes.filter(uid => uid !== action.authedUser) : state[action.id].likes.concat([action.authedUser])\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/denis/Documents/UDACITY/react-game/src/reducers/questions.js"],"names":["RECEIVE_QUESTIONS","ADD_QUESTION_ANSWER","questions","state","action","type","id","likes","hasLiked","filter","uid","authedUser","concat"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,mBAA5B,QAAuD,sBAAvD;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAK,GAAG,EAA3B,EAA+BC,MAA/B,EAAuC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,iBAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEH,WAAGC,MAAM,CAACF;AAFP,OAAP;;AAIJ,SAAKD,mBAAL;AACC,aAAO,EACN,GAAGE,KADG;AAEA,SAACC,MAAM,CAACE,EAAR,GAAa,EACT,GAAGH,KAAK,CAACC,MAAM,CAACE,EAAR,CADC;AAETC,UAAAA,KAAK,EAAEH,MAAM,CAACI,QAAP,KAAoB,IAApB,GACHL,KAAK,CAACC,MAAM,CAACE,EAAR,CAAL,CAAiBC,KAAjB,CAAuBE,MAAvB,CAA+BC,GAAD,IAASA,GAAG,KAAKN,MAAM,CAACO,UAAtD,CADG,GACiER,KAAK,CAACC,MAAM,CAACE,EAAR,CAAL,CAAiBC,KAAjB,CAAuBK,MAAvB,CAA8B,CAACR,MAAM,CAACO,UAAR,CAA9B;AAH/D;AAFb,OAAP;;AAQD;AACI,aAAOR,KAAP;AAhBR;AAkBH","sourcesContent":["import { RECEIVE_QUESTIONS, ADD_QUESTION_ANSWER } from '../actions/questions'\n\nexport default function questions(state = {}, action) {\n    switch (action.type) {\n        case RECEIVE_QUESTIONS:\n            return {\n                ...state,\n                ...action.questions\n            }\n        case ADD_QUESTION_ANSWER:\n        \treturn {\n        \t\t...state,\n                [action.id]: {\n                    ...state[action.id],\n                    likes: action.hasLiked === true ?\n                        state[action.id].likes.filter((uid) => uid !== action.authedUser) : state[action.id].likes.concat([action.authedUser])\n                }\n        \t}\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}