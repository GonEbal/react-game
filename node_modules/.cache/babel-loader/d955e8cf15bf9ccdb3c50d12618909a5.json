{"ast":null,"code":"import { saveQuestion, saveQuestionAnswer } from '../utils/api';\nimport { showLoading, hideLoading } from 'react-redux-loading';\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS';\nexport const ADD_QUESTION_ANSWER = 'ADD_QUESTION_ANSWER';\nexport const ADD_QUESTION = 'ADD_QUESTION';\nexport function receiveQuestions(questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions\n  };\n}\n\nfunction addQuestion(question) {\n  return {\n    type: ADD_QUESTION,\n    question\n  };\n}\n\nexport function handleAddQuestion(authedUser, qid, answer) {\n  return (dispatch, getState) => {\n    const {\n      authedUser\n    } = getState();\n    dispatch(showLoading());\n    return saveQuestion({\n      qid,\n      author: authedUser,\n      answer\n    }).then(question => dispatch(addQuestion(question))).then(() => dispatch(hideLoading()));\n  };\n}\n\nfunction questionAswer({\n  authedUser,\n  qid,\n  answer\n}) {\n  return {\n    type: ADD_QUESTION_ANSWER,\n    authedUser,\n    qid,\n    answer\n  };\n}\n\nexport function handleAddQuestionAswer(info) {\n  return dispatch => {\n    dispatch(showLoading());\n    return saveQuestionAnswer(info).then((users, questions) => console.log(questions)).then(() => dispatch(hideLoading()));\n  };\n} // export function handleAddQuestionAswer (info) {\n//   return (dispatch) => {\n//     dispatch(showLoading())\n//     dispatch(questionAswer(info))\n//     return saveQuestionAnswer(info)\n//       .catch((e) => {\n//         console.warn('Error in handleAddQuestionAswer: ', e)\n//         dispatch(questionAswer(info))\n//         alert('The was an error. Try again.')\n//       })\n//   }\n// }","map":{"version":3,"sources":["/Users/denis/Documents/UDACITY/react-game/src/actions/questions.js"],"names":["saveQuestion","saveQuestionAnswer","showLoading","hideLoading","RECEIVE_QUESTIONS","ADD_QUESTION_ANSWER","ADD_QUESTION","receiveQuestions","questions","type","addQuestion","question","handleAddQuestion","authedUser","qid","answer","dispatch","getState","author","then","questionAswer","handleAddQuestionAswer","info","users","console","log"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,kBAAvB,QAAiD,cAAjD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,qBAAzC;AAEA,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AAEP,OAAO,SAASC,gBAAT,CAA2BC,SAA3B,EAAsC;AAC5C,SAAO;AACNC,IAAAA,IAAI,EAAEL,iBADA;AAENI,IAAAA;AAFM,GAAP;AAIA;;AAED,SAASE,WAAT,CAAsBC,QAAtB,EAAgC;AAC9B,SAAO;AACLF,IAAAA,IAAI,EAAEH,YADD;AAELK,IAAAA;AAFK,GAAP;AAID;;AAED,OAAO,SAASC,iBAAT,CAA4BC,UAA5B,EAAwCC,GAAxC,EAA6CC,MAA7C,EAAqD;AAC1D,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7B,UAAM;AAAEJ,MAAAA;AAAF,QAAiBI,QAAQ,EAA/B;AACAD,IAAAA,QAAQ,CAACd,WAAW,EAAZ,CAAR;AAEA,WAAOF,YAAY,CAAC;AAClBc,MAAAA,GADkB;AAElBI,MAAAA,MAAM,EAAEL,UAFU;AAGlBE,MAAAA;AAHkB,KAAD,CAAZ,CAKJI,IALI,CAKER,QAAD,IAAcK,QAAQ,CAACN,WAAW,CAACC,QAAD,CAAZ,CALvB,EAMJQ,IANI,CAMC,MAAMH,QAAQ,CAACb,WAAW,EAAZ,CANf,CAAP;AAOD,GAXD;AAYD;;AAED,SAASiB,aAAT,CAAwB;AAAEP,EAAAA,UAAF;AAAcC,EAAAA,GAAd;AAAmBC,EAAAA;AAAnB,CAAxB,EAAqD;AACnD,SAAO;AACLN,IAAAA,IAAI,EAAEJ,mBADD;AAELQ,IAAAA,UAFK;AAGLC,IAAAA,GAHK;AAILC,IAAAA;AAJK,GAAP;AAMD;;AAED,OAAO,SAASM,sBAAT,CAAiCC,IAAjC,EAAuC;AAC5C,SAAQN,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACd,WAAW,EAAZ,CAAR;AAEA,WAAOD,kBAAkB,CAACqB,IAAD,CAAlB,CACJH,IADI,CACC,CAACI,KAAD,EAAQf,SAAR,KAAsBgB,OAAO,CAACC,GAAR,CAAYjB,SAAZ,CADvB,EAEJW,IAFI,CAEC,MAAMH,QAAQ,CAACb,WAAW,EAAZ,CAFf,CAAP;AAGD,GAND;AAOD,C,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { saveQuestion, saveQuestionAnswer } from '../utils/api'\nimport { showLoading, hideLoading } from 'react-redux-loading'\n\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS'\nexport const ADD_QUESTION_ANSWER = 'ADD_QUESTION_ANSWER'\nexport const ADD_QUESTION = 'ADD_QUESTION'\n\nexport function receiveQuestions (questions) {\n\treturn {\n\t\ttype: RECEIVE_QUESTIONS,\n\t\tquestions\n\t}\n}\n\nfunction addQuestion (question) {\n  return {\n    type: ADD_QUESTION,\n    question,\n  }\n}\n\nexport function handleAddQuestion (authedUser, qid, answer) {\n  return (dispatch, getState) => {\n    const { authedUser } = getState()\n    dispatch(showLoading())\n\n    return saveQuestion({\n      qid,\n      author: authedUser,\n      answer\n    })\n      .then((question) => dispatch(addQuestion(question)))\n      .then(() => dispatch(hideLoading()))\n  }\n}\n\nfunction questionAswer ({ authedUser, qid, answer }) {\n  return {\n    type: ADD_QUESTION_ANSWER,\n    authedUser,\n    qid,\n    answer\n  }\n}\n\nexport function handleAddQuestionAswer (info) {\n  return (dispatch) => {\n    dispatch(showLoading())\n\n    return saveQuestionAnswer(info)\n      .then((users, questions) => console.log(questions))\n      .then(() => dispatch(hideLoading()))\n  }\n}\n\n// export function handleAddQuestionAswer (info) {\n//   return (dispatch) => {\n//     dispatch(showLoading())\n//     dispatch(questionAswer(info))\n\n//     return saveQuestionAnswer(info)\n//       .catch((e) => {\n//         console.warn('Error in handleAddQuestionAswer: ', e)\n//         dispatch(questionAswer(info))\n//         alert('The was an error. Try again.')\n//       })\n//   }\n// }"]},"metadata":{},"sourceType":"module"}