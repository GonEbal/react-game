{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/denis/Documents/UDACITY/react-game/src/components/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Question from \"./Question\";\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.unanswered = () => {\n      const container = document.getElementById(\"container_list\");\n      container.classList.add(\"right-panel-active\");\n    };\n\n    this.answered = () => {\n      const container = document.getElementById(\"container_list\");\n      container.classList.remove(\"right-panel-active\");\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container_body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container_list\",\n        id: \"container_list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container_list unanswered-container_list questions_list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Unanswered\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"dashboard-list\",\n            children: this.props.questionIds.map(id => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"question\",\n              children: /*#__PURE__*/_jsxDEV(Question, {\n                id: id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 19\n              }, this)\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container_list answered-container_list questions_list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Answered\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"dashboard-list\",\n            children: this.props.questionIds.map(id => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"question\",\n              children: /*#__PURE__*/_jsxDEV(Question, {\n                id: id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, this)\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay-container_list\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlay\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overlay-panel overlay-left\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Don't feel to answer?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Wanna see answered questions?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"ghost\",\n                id: \"signIn\",\n                onClick: this.answered,\n                children: \"View Answered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overlay-panel overlay-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Want more questions?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Check out all questions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"ghost\",\n                id: \"signUp\",\n                onClick: this.unanswered,\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  questions,\n  authedUser\n}) {\n  console.log(questions); //const answered_questions = questions.filter(question => question.id === \"Rebels\")\n\n  return {\n    questionIds: Object.keys(questions).sort((a, b) => questions[b].timestamp - questions[a].timestamp)\n  };\n}\n\nexport default connect(mapStateToProps)(Dashboard);","map":{"version":3,"sources":["/Users/denis/Documents/UDACITY/react-game/src/components/Dashboard.js"],"names":["React","Component","connect","Question","Dashboard","unanswered","container","document","getElementById","classList","add","answered","remove","render","props","questionIds","map","id","mapStateToProps","questions","authedUser","console","log","Object","keys","sort","a","b","timestamp"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport Question from \"./Question\"\n\nclass Dashboard extends Component {\n  unanswered = () => {\n    const container = document.getElementById(\"container_list\")\n    container.classList.add(\"right-panel-active\")\n  };\n  answered = () => {\n    const container = document.getElementById(\"container_list\")\n    container.classList.remove(\"right-panel-active\")\n  }\n\n  render() {\n    return (\n      <div className=\"container_body\">\n        <div className=\"container_list\" id=\"container_list\">\n          <div className=\"form-container_list unanswered-container_list questions_list\">\n            <h1>Unanswered</h1>\n            <ul className=\"dashboard-list\">\n              {this.props.questionIds.map((id) => (\n                <li key={id} className=\"question\">\n                  <Question id={id} />\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div className=\"form-container_list answered-container_list questions_list\">\n            <h1>Answered</h1>\n            <ul className=\"dashboard-list\">\n              {this.props.questionIds.map((id) => (\n                <li key={id} className=\"question\">\n                  <Question id={id} />\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div className=\"overlay-container_list\">\n            <div className=\"overlay\">\n              <div className=\"overlay-panel overlay-left\">\n                <h1>Don't feel to answer?</h1>\n                <p>Wanna see answered questions?</p>\n                <button className=\"ghost\" id=\"signIn\" onClick={this.answered}>\n                  View Answered\n                </button>\n              </div>\n              <div className=\"overlay-panel overlay-right\">\n                <h1>Want more questions?</h1>\n                <p>Check out all questions</p>\n                <button className=\"ghost\" id=\"signUp\" onClick={this.unanswered}>\n                  View\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps({ questions, authedUser }) {\n  console.log(questions)\n  //const answered_questions = questions.filter(question => question.id === \"Rebels\")\n  return {\n    questionIds: Object.keys(questions).sort(\n      (a, b) => questions[b].timestamp - questions[a].timestamp\n    ),\n  }\n}\n\nexport default connect(mapStateToProps)(Dashboard)\n"]},"metadata":{},"sourceType":"module"}