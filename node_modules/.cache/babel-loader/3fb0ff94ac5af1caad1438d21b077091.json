{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/denis/Documents/UDACITY/react-game/src/components/Question.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Question extends Component {\n  render() {\n    const {\n      avatarURL,\n      name\n    } = this.props.user;\n    const {\n      question\n    } = this.props;\n    const {\n      answer\n    } = this.props;\n    console.log(question[answer]);\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user_asks\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [name, \" asks:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatarURL,\n          alt: `Avatar of ${name}`,\n          className: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-info\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Would you rather\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"...\", question.optionOne.text, \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  questions,\n  users\n}, {\n  id\n}) {\n  const question = questions[id];\n  const user = users[question.author];\n  const answer = user.answers[id];\n  const answer_text = question[answer];\n  console.log(answer_text);\n  return {\n    question: question,\n    user: user,\n    answer: answer_text ? answer_text : 'unanswered'\n  };\n}\n\nexport default connect(mapStateToProps)(Question);","map":{"version":3,"sources":["/Users/denis/Documents/UDACITY/react-game/src/components/Question.js"],"names":["React","Component","Fragment","connect","Question","render","avatarURL","name","props","user","question","answer","console","log","optionOne","text","mapStateToProps","questions","users","id","author","answers","answer_text"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAChCI,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAsB,KAAKC,KAAL,CAAWC,IAAvC;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKF,KAA1B;AACA,UAAM;AAAEG,MAAAA;AAAF,QAAa,KAAKH,KAAxB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,MAAD,CAApB;AACA,wBACC,QAAC,QAAD;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACC;AAAA,qBAAOJ,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD,eAIC;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACC;AACC,UAAA,GAAG,EAAED,SADN;AAEC,UAAA,GAAG,EAAG,aAAYC,IAAK,EAFxB;AAGC,UAAA,SAAS,EAAC;AAHX;AAAA;AAAA;AAAA;AAAA,gBADD,eAMC;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACC;AAAA,oCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,eAEC;AAAA,gCAAOG,QAAQ,CAACI,SAAT,CAAmBC,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAND;AAAA;AAAA;AAAA;AAAA;AAAA,cAJD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAoBA;;AA1B+B;;AA6BjC,SAASC,eAAT,CAAyB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAzB,EAA+C;AAAEC,EAAAA;AAAF,CAA/C,EAAuD;AACtD,QAAMT,QAAQ,GAAGO,SAAS,CAACE,EAAD,CAA1B;AACA,QAAMV,IAAI,GAAGS,KAAK,CAACR,QAAQ,CAACU,MAAV,CAAlB;AACA,QAAMT,MAAM,GAAGF,IAAI,CAACY,OAAL,CAAaF,EAAb,CAAf;AACA,QAAMG,WAAW,GAAGZ,QAAQ,CAACC,MAAD,CAA5B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYS,WAAZ;AACA,SAAO;AACNZ,IAAAA,QAAQ,EAAEA,QADJ;AAEND,IAAAA,IAAI,EAAEA,IAFA;AAGNE,IAAAA,MAAM,EAAEW,WAAW,GACZA,WADY,GAEZ;AALD,GAAP;AAOA;;AAED,eAAenB,OAAO,CAACa,eAAD,CAAP,CAAyBZ,QAAzB,CAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Question extends Component {\n\trender() {\n\t\tconst { avatarURL, name } = this.props.user;\n\t\tconst { question } = this.props\n\t\tconst { answer } = this.props\n\t\tconsole.log(question[answer])\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className='user_asks'>\n\t\t\t\t\t<span>{name} asks:</span>\n\t\t\t\t</div>\n\t\t\t\t<div className='question-inner'>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={avatarURL}\n\t\t\t\t\t\talt={`Avatar of ${name}`}\n\t\t\t\t\t\tclassName=\"avatar\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"question-info\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span>Would you rather</span>\n\t\t\t\t\t\t\t<p>...{question.optionOne.text}...</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nfunction mapStateToProps({ questions, users }, { id }) {\n\tconst question = questions[id];\n\tconst user = users[question.author];\n\tconst answer = user.answers[id]\n\tconst answer_text = question[answer]\n\tconsole.log(answer_text)\n\treturn {\n\t\tquestion: question,\n\t\tuser: user,\n\t\tanswer: answer_text\n\t      ? answer_text\n\t      : 'unanswered'\n\t};\n}\n\nexport default connect(mapStateToProps)(Question);\n"]},"metadata":{},"sourceType":"module"}