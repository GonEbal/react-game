{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/denis/Documents/UDACITY/react-game/src/components/Result.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Result extends Component {\n  render() {\n    const {\n      avatarURL,\n      name\n    } = this.props.author;\n    const {\n      total_answers,\n      authedUser_answer,\n      this_answer_count,\n      progress\n    } = this.props;\n\n    if (authedUser_answer === 'optionOne') {\n      const optionOne = document.getElementById('one'); //optionOne.classList.add('selected')\n\n      console.log('WTF', optionOne);\n    } else if (authedUser_answer === 'optionTwo') {\n      const optionTwo = document.getElementById('two');\n      console.log('WTF2', optionTwo);\n      optionTwo.classList.add('selected');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container_body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user_asks\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Asked by \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatarURL,\n          alt: `Avatar of ${name}`,\n          className: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Results:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"one\",\n            className: \"option\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Would you ...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress_bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: `${progress}%`\n                },\n                className: \"progress\",\n                children: [progress, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"answer_count\",\n              children: [this_answer_count, \" out of \", total_answers, \" votes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"two\",\n            className: \"option\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Would you ...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress_bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: `${progress}%`\n                },\n                className: \"progress\",\n                children: [progress, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"answer_count\",\n              children: [this_answer_count, \" out of \", total_answers, \" votes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nfunction mapStateToProsp({\n  authedUser,\n  questions,\n  users\n}, props) {\n  const {\n    id\n  } = props.match.params;\n  const question = questions[id];\n  const author = users[question.author];\n  const total_answers = Object.keys(question.optionTwo.votes).length + Object.keys(question.optionOne.votes).length;\n  const authedUser_answer = users[authedUser].answers[id];\n  const this_answer_count = Object.keys(question[authedUser_answer].votes).length;\n  return {\n    total_answers,\n    authedUser_answer,\n    this_answer_count,\n    author,\n    progress: (this_answer_count * 100 / total_answers).toFixed(1)\n  };\n}\n\nexport default connect(mapStateToProsp)(Result);","map":{"version":3,"sources":["/Users/denis/Documents/UDACITY/react-game/src/components/Result.js"],"names":["React","Component","connect","Result","render","avatarURL","name","props","author","total_answers","authedUser_answer","this_answer_count","progress","optionOne","document","getElementById","console","log","optionTwo","classList","add","width","mapStateToProsp","authedUser","questions","users","id","match","params","question","Object","keys","votes","length","answers","toFixed"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Result extends Component {\n\trender() {\n\t\tconst { avatarURL, name } = this.props.author;\n\t\tconst {\n\t\t\ttotal_answers,\n\t\t\tauthedUser_answer,\n\t\t\tthis_answer_count,\n\t\t\tprogress,\n\t\t} = this.props;\n\t\tif (authedUser_answer === 'optionOne') {\n\t\t\tconst optionOne = document.getElementById('one')\n    \t\t//optionOne.classList.add('selected')\n    \t\tconsole.log('WTF', optionOne)\n\t\t} else if (authedUser_answer === 'optionTwo') {\n\t\t\tconst optionTwo = document.getElementById('two')\n\t\t\tconsole.log('WTF2', optionTwo)\n    \t\toptionTwo.classList.add('selected')\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"container_body\">\n\t\t\t\t<div className=\"user_asks\">\n\t\t\t\t\t<span>Asked by {name}</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"question-inner\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={avatarURL}\n\t\t\t\t\t\talt={`Avatar of ${name}`}\n\t\t\t\t\t\tclassName=\"avatar\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"result-info\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span>Results:</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div id='one' className = 'option'>\n\t\t\t\t\t\t\t<p>Would you ...</p>\n\t\t\t\t\t\t\t<div className=\"progress_bar\"> \n\t\t\t\t\t\t        <div style={{width: `${progress}%`}} className=\"progress\">{progress}%</div> \n\t\t\t\t\t\t    </div> \n\t\t\t\t\t\t\t<p className='answer_count'>\n\t\t\t\t\t\t\t\t{this_answer_count} out of {total_answers} votes\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div id='two' className='option'>\n\t\t\t\t\t\t\t<p>Would you ...</p>\n\t\t\t\t\t\t\t<div className=\"progress_bar\"> \n\t\t\t\t\t\t        <div style={{width: `${progress}%`}} className=\"progress\">{progress}%</div> \n\t\t\t\t\t\t    </div> \n\t\t\t\t\t\t\t<p className='answer_count'>\n\t\t\t\t\t\t\t\t{this_answer_count} out of {total_answers} votes\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction mapStateToProsp({ authedUser, questions, users }, props) {\n\tconst { id } = props.match.params;\n\tconst question = questions[id];\n\tconst author = users[question.author];\n\tconst total_answers =\n\t\tObject.keys(question.optionTwo.votes).length +\n\t\tObject.keys(question.optionOne.votes).length;\n\n\tconst authedUser_answer = users[authedUser].answers[id];\n\n\tconst this_answer_count = Object.keys(question[authedUser_answer].votes).length;\n\n\treturn {\n\n\t\ttotal_answers,\n\t\tauthedUser_answer,\n\t\tthis_answer_count,\n\t\tauthor,\n\t\tprogress: ((this_answer_count * 100) / total_answers).toFixed(1),\n\t};\n}\n\nexport default connect(mapStateToProsp)(Result);\n"]},"metadata":{},"sourceType":"module"}